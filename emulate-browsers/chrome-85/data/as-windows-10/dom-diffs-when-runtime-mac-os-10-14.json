{
  "removals": [
    "window.Text.prototype.getDestinationInsertionPoints",
    "window.Element.prototype.getDestinationInsertionPoints"
  ],
  "additions": [
    {
      "path": "window.Navigator.prototype",
      "propertyName": "setAppBadge",
      "prevProperty": "xr",
      "property": {
        "length": {
          "_$type": "number",
          "_$flags": "c",
          "_$value": 0
        },
        "name": {
          "_$type": "string",
          "_$flags": "c",
          "_$value": ""
        },
        "_$type": "function",
        "_$function": "function () { [native code] }",
        "_$invocation": "TypeError: Failed to execute 'setAppBadge' on 'Navigator': Illegal invocation",
        "_$flags": "cew"
      }
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "clearAppBadge",
      "prevProperty": "setAppBadge",
      "property": {
        "length": {
          "_$type": "number",
          "_$flags": "c",
          "_$value": 0
        },
        "name": {
          "_$type": "string",
          "_$flags": "c",
          "_$value": ""
        },
        "_$type": "function",
        "_$function": "function () { [native code] }",
        "_$invocation": "TypeError: Failed to execute 'clearAppBadge' on 'Navigator': Illegal invocation",
        "_$flags": "cew"
      }
    },
    {
      "path": "window.Navigator.prototype",
      "propertyName": "getInstalledRelatedApps",
      "prevProperty": "requestMediaKeySystemAccess",
      "property": {
        "length": {
          "_$type": "number",
          "_$flags": "c",
          "_$value": 0
        },
        "name": {
          "_$type": "string",
          "_$flags": "c",
          "_$value": ""
        },
        "_$type": "function",
        "_$function": "function () { [native code] }",
        "_$invocation": "TypeError: Failed to execute 'getInstalledRelatedApps' on 'Navigator': Illegal invocation",
        "_$flags": "cew"
      }
    },
    {
      "path": "window.HTMLVideoElement.prototype",
      "propertyName": "getVideoPlaybackQuality",
      "prevProperty": "onleavepictureinpicture",
      "property": {
        "length": {
          "_$type": "number",
          "_$flags": "c",
          "_$value": 0
        },
        "name": {
          "_$type": "string",
          "_$flags": "c",
          "_$value": "getVideoPlaybackQuality"
        },
        "_$type": "function",
        "_$function": "function getVideoPlaybackQuality() { [native code] }",
        "_$invocation": "TypeError: Illegal invocation",
        "_$flags": "cew"
      }
    },
    {
      "path": "window.HTMLVideoElement.prototype",
      "propertyName": "requestVideoFrameCallback",
      "prevProperty": "requestPictureInPicture",
      "property": {
        "length": {
          "_$type": "number",
          "_$flags": "c",
          "_$value": 1
        },
        "name": {
          "_$type": "string",
          "_$flags": "c",
          "_$value": "requestVideoFrameCallback"
        },
        "_$type": "function",
        "_$function": "function requestVideoFrameCallback() { [native code] }",
        "_$invocation": "TypeError: Illegal invocation",
        "_$flags": "cew"
      }
    },
    {
      "path": "window.HTMLVideoElement.prototype",
      "propertyName": "cancelVideoFrameCallback",
      "prevProperty": "requestVideoFrameCallback",
      "property": {
        "length": {
          "_$type": "number",
          "_$flags": "c",
          "_$value": 1
        },
        "name": {
          "_$type": "string",
          "_$flags": "c",
          "_$value": "cancelVideoFrameCallback"
        },
        "_$type": "function",
        "_$function": "function cancelVideoFrameCallback() { [native code] }",
        "_$invocation": "TypeError: Illegal invocation",
        "_$flags": "cew"
      }
    },
    {
      "path": "window.Notification.prototype",
      "propertyName": "image",
      "prevProperty": "close",
      "property": {
        "_$flags": "ce",
        "_$accessException": "TypeError: Illegal invocation",
        "_$get": "function get image() { [native code] }",
        "_$getToStringToString": "function toString() { [native code] }"
      }
    },
    {
      "path": "window",
      "propertyName": "VideoPlaybackQuality",
      "prevProperty": "OffscreenCanvasRenderingContext2D",
      "property": {
        "length": {
          "_$type": "number",
          "_$flags": "c",
          "_$value": 0
        },
        "name": {
          "_$type": "string",
          "_$flags": "c",
          "_$value": "VideoPlaybackQuality"
        },
        "arguments": {
          "_$type": "object",
          "_$flags": "",
          "_$value": null
        },
        "caller": {
          "_$type": "object",
          "_$flags": "",
          "_$value": null
        },
        "prototype": {
          "_$protos": ["Object.prototype"],
          "creationTime": {
            "_$flags": "ce",
            "_$accessException": "TypeError: Illegal invocation",
            "_$get": "function get creationTime() { [native code] }",
            "_$getToStringToString": "function toString() { [native code] }"
          },
          "totalVideoFrames": {
            "_$flags": "ce",
            "_$accessException": "TypeError: Illegal invocation",
            "_$get": "function get totalVideoFrames() { [native code] }",
            "_$getToStringToString": "function toString() { [native code] }"
          },
          "droppedVideoFrames": {
            "_$flags": "ce",
            "_$accessException": "TypeError: Illegal invocation",
            "_$get": "function get droppedVideoFrames() { [native code] }",
            "_$getToStringToString": "function toString() { [native code] }"
          },
          "corruptedVideoFrames": {
            "_$flags": "ce",
            "_$accessException": "TypeError: Illegal invocation",
            "_$get": "function get corruptedVideoFrames() { [native code] }",
            "_$getToStringToString": "function toString() { [native code] }"
          },
          "Symbol(Symbol.toStringTag)": {
            "_$type": "string",
            "_$flags": "c",
            "_$value": "VideoPlaybackQuality"
          },
          "_$type": "object",
          "_$flags": ""
        },
        "new()": {
          "_$type": "constructor",
          "_$constructorException": "TypeError: Illegal constructor"
        },
        "_$type": "function",
        "_$function": "function VideoPlaybackQuality() { [native code] }",
        "_$flags": "cw"
      }
    }
  ],
  "order": [],
  "changes": []
}
